@using CemSys2.ViewModel
@model PaginadorViewModel
<nav aria-label="Paginador" class="mt-3">
    <ul class="pagination justify-content-center">
        @* Botón anterior *@
        @if (Model.PaginaActual > 1)
        {
            <li class="page-item">
                @{
                    // Crea un diccionario de parámetros temporales
                    var prevParams = new Dictionary<string, string>(Model.ParametrosAdicionales);
                    // Sobrescribe la clave 'pagina' con el valor de la página anterior
                    prevParams["pagina"] = (Model.PaginaActual - 1).ToString();
                }
                <a class="page-link"
                   asp-action="@Model.Accion"
                   asp-controller="@Model.Controlador"
                   asp-all-route-data="prevParams">
                    @* Usa el nuevo diccionario aquí *@
                    <i class="bi bi-chevron-left"></i>
                </a>
            </li>
        }
        @* Páginas numéricas *@
        @{
            int paginaInicio = Math.Max(1, Model.PaginaActual - 2);
            int paginaFin = Math.Min(Model.TotalPaginas, Model.PaginaActual + 2);
        }
        @* Primera página si no está en el rango *@
        @if (paginaInicio > 1)
        {
            <li class="page-item">
                @{
                    // Crea un diccionario de parámetros temporales para la primera página
                    var firstPageParams = new Dictionary<string, string>(Model.ParametrosAdicionales);
                    firstPageParams["pagina"] = "1";
                }
                <a class="page-link"
                   asp-action="@Model.Accion"
                   asp-controller="@Model.Controlador"
                   asp-all-route-data="firstPageParams">
                    @* Usa el nuevo diccionario aquí *@
                    1
                </a>
            </li>
            @if (paginaInicio > 2)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
        }
        @* Páginas del rango *@
        @for (int i = paginaInicio; i <= paginaFin; i++)
        {
            <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                @if (i == Model.PaginaActual)
                {
                    <span class="page-link">@i</span>
                }
                else
                {
                    var parametrosConPagina = new Dictionary<string, string>(Model.ParametrosAdicionales);
                    parametrosConPagina["pagina"] = i.ToString();

                    <a class="page-link"
                       asp-action="@Model.Accion"
                       asp-controller="@Model.Controlador"
                       asp-all-route-data="parametrosConPagina">
                        @i
                    </a>
                }
            </li>
        }


        @* Última página si no está en el rango *@
        @if (paginaFin < Model.TotalPaginas)
        {
            @if (paginaFin < Model.TotalPaginas - 1)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
            <li class="page-item">
                @{
                    // Crea un diccionario de parámetros temporales para la última página
                    var lastPageParams = new Dictionary<string, string>(Model.ParametrosAdicionales);
                    lastPageParams["pagina"] = Model.TotalPaginas.ToString();
                }
                <a class="page-link"
                   asp-action="@Model.Accion"
                   asp-controller="@Model.Controlador"
                   asp-all-route-data="lastPageParams">
                    @* Usa el nuevo diccionario aquí *@
                    @Model.TotalPaginas
                </a>
            </li>
        }
        @* Botón siguiente *@
        @if (Model.PaginaActual < Model.TotalPaginas)
        {
            <li class="page-item">
                @{
                    // Crea un diccionario de parámetros temporales
                    var nextParams = new Dictionary<string, string>(Model.ParametrosAdicionales);
                    // Sobrescribe la clave 'pagina' con el valor de la página siguiente
                    nextParams["pagina"] = (Model.PaginaActual + 1).ToString();
                }
                <a class="page-link"
                   asp-action="@Model.Accion"
                   asp-controller="@Model.Controlador"
                   asp-all-route-data="nextParams">
                    @* Usa el nuevo diccionario aquí *@
                    <i class="bi bi-chevron-right"></i>
                </a>
            </li>
        }
    </ul>
    @* Información de paginación *@
    <div class="text-center mt-2">
        <small class="text-muted">
            Página @Model.PaginaActual de @Model.TotalPaginas
            @if (Model.TotalRegistros > 0)
            {
                <span> - @Model.TotalRegistros registro(s) total(es)</span>
            }
        </small>
    </div>
</nav>
@* modo *@