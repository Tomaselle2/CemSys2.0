@using CemSys2.ViewModel
@model AdministrarTarifariaVM

<a asp-action="Index" asp-controller="Tarifaria" class="btn-volver"><i class="bi bi-arrow-left"></i></a>
@{
    //string accion = (Model.EsEdicion ? "Modificar" : "Registrar");
    //string redirigir = "Administrar";
}


<h1 class="tituloDePagina">Tarifaria @Model.NombreTarifaria!.ToUpper()</h1>



@* Mostrar mensajes de éxito (desde TempData después de una redirección) *@
@if (TempData["MensajeExito"] != null)
{
    <div class="alert alert-success alert-dismissible fade show alerta-contenedor" role="alert">
        @TempData["MensajeExito"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* Mostrar mensajes de error genéricos (si los pones en model.MensajeError) *@
@if (!string.IsNullOrEmpty(Model.MensajeError))
{
    <div class="alert alert-success alert-dismissible fade show alerta-contenedor" role="alert">
        @Model.MensajeError
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}



<!-- Contenedor para mensajes AJAX -->
<div id="ajax-messages"></div>


<!-- Formulario precios generales-->
<div class="accordion" id="accordionGenerales">
    @* ID único para el acordeón principal *@
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsGenerales-headingOne">
            <button class="accordion-button nueva-seccion" type="button" data-bs-toggle="collapse" data-bs-target="#panelsGenerales-collapseOne" aria-expanded="false" aria-controls="panelsGenerales-collapseOne">
                Generales
            </button>
        </h2>
        <div id="panelsGenerales-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsGenerales-headingOne" data-bs-parent="#accordionGenerales">
            @* Agregado data-bs-parent y 'show' para que inicie abierto si lo deseas *@
            <div class="accordion-body">
                <form id="formPreciosGenerales" class="form-box">
                    @* ID único para el formulario *@
                    <input type="hidden" id="tarifarioIdGenerales" value="@Model.IdTarifaria" /> @* ID único para el campo oculto *@
                    @Html.AntiForgeryToken()

                    @if (Model.ListaPreciosTarifaria != null && Model.ListaPreciosTarifaria.Any())
                    {
                        <div class="card shadow-sm">
                            <div class="card-body p-0">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Concepto</th>
                                            <th>Precio</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var conceptosGenerales = Model.ListaPreciosTarifaria
                                            .Where(p => p.ConceptoTarifaria.TipoConceptoId == 1 && p.ConceptoTarifaria.Visibilidad == true)
                                            .OrderBy(p => p.ConceptoTarifaria.Nombre)
                                            .ToList();
                                        }

                                        @foreach (var precio in conceptosGenerales)
                                        {
                                            <tr>
                                                <td>@precio.ConceptoTarifaria.Nombre.ToUpper()</td>
                                                <td>
                                                    <div class="input-group">
                                                        <span class="input-group-text">$</span>
                                                        <input type="number"
                                                        class="form-control precio-input" @* Clase común *@
                                                        data-precio-id="@precio.Id"
                                                        data-concepto-id="@precio.ConceptoTarifariaId"
                                                        value="@precio.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                                        step="0.01"
                                                        min="0"
                                                        placeholder="0.00" />
                                                    </div>
                                                </td>
                                            </tr>
                                        }

                                        @if (!conceptosGenerales.Any())
                                        {
                                            <tr>
                                                <td colspan="2" class="text-center text-muted py-4">
                                                    <i class="fas fa-info-circle"></i>
                                                    No hay conceptos generales configurados para esta tarifaria.
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            @if (conceptosGenerales.Any())
                            {
                                <div class="card-footer">
                                    <div class="d-flex justify-content-end">
                                        <button type="button" class="btn btn-success btn-guardar-precios" data-form-id="formPreciosGenerales">
                                            @* Clase común y data-form-id *@
                                            <i class="fas fa-save"></i> Guardar Cambios
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info" role="alert">
                            <i class="fas fa-info-circle"></i>
                            No hay precios configurados para esta tarifaria.
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>



<!-- Formulario precios introduccion-->
<div class="accordion" id="accordionPrincipal">
    @* Cambiamos el ID del acordeón principal a algo más genérico *@
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsIntroduccion-headingOne">
            <button class="accordion-button nueva-seccion" type="button" data-bs-toggle="collapse" data-bs-target="#panelsIntroduccion-collapseOne" aria-expanded="false" aria-controls="panelsIntroduccion-collapseOne">
                Introducción
            </button>
        </h2>
        <div id="panelsIntroduccion-collapseOne" class="accordion-collapse collapse " aria-labelledby="panelsIntroduccion-headingOne" data-bs-parent="#accordionPrincipal">
            @* Este es el padre del acordeón de Introducción *@
            <div class="accordion-body">
                @* **CONTENEDOR DE SUB-ACORDEONES** *@
                <div class="accordion" id="accordionSubconjuntosIntroduccion">
                    @* Nuevo acordeón padre para los subconjuntos *@

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="panelsContribucion-headingOne">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsContribucion-collapseOne" aria-expanded="false" aria-controls="panelsContribucion-collapseOne">
                                Contribución
                            </button>
                        </h2>
                        <div id="panelsContribucion-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsContribucion-headingOne" data-bs-parent="#accordionSubconjuntosIntroduccion">
                            @* Apunta al nuevo padre *@
                            <div class="accordion-body">
                                <form id="formPreciosContribucion" class="form-box">
                                    <input type="hidden" id="tarifarioIdContribucion" value="@Model.IdTarifaria" />
                                    @Html.AntiForgeryToken()

                                    @if (Model.ListaPreciosTarifaria != null && Model.ListaPreciosTarifaria.Any())
                                    {
                                        <div class="card shadow-sm">
                                            <div class="card-body p-0">
                                                <table class="table table-hover mb-0">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th>Concepto</th>
                                                            <th>Precio</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @{
                                                            //concepto Contribucion
                                                            var conceptosContribucion = Model.ListaPreciosTarifaria
                                                            .Where(p => p.ConceptoTarifaria.TipoConceptoId == 2 && p.ConceptoTarifaria.Visibilidad == true)
                                                            .OrderBy(p => p.ConceptoTarifaria.Nombre)
                                                            .ToList();
                                                        }

                                                        @foreach (var precio in conceptosContribucion)
                                                        {
                                                            <tr>
                                                                <td>@precio.ConceptoTarifaria.Nombre.ToUpper()</td>
                                                                <td>
                                                                    <div class="input-group">
                                                                        <span class="input-group-text">$</span>
                                                                        <input type="number"
                                                                        class="form-control precio-input"
                                                                        data-precio-id="@precio.Id"
                                                                        data-concepto-id="@precio.ConceptoTarifariaId"
                                                                        value="@precio.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                                                        step="0.01"
                                                                        min="0"
                                                                        placeholder="0.00" />
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }

                                                        @if (!conceptosContribucion.Any())
                                                        {
                                                            <tr>
                                                                <td colspan="2" class="text-center text-muted py-4">
                                                                    <i class="fas fa-info-circle"></i>
                                                                    No hay conceptos de contribución configurados para esta tarifaria.
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>

                                            @if (conceptosContribucion.Any())
                                            {
                                                <div class="card-footer">
                                                    <div class="d-flex justify-content-end">
                                                        <button type="button" class="btn btn-success btn-guardar-precios" data-form-id="formPreciosContribucion">
                                                            <i class="fas fa-save"></i> Guardar Cambios
                                                        </button>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info" role="alert">
                                            <i class="fas fa-info-circle"></i>
                                            No hay precios configurados para esta tarifaria.
                                        </div>
                                    }
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="panelsRegistroCivil-headingOne">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsRegistroCivil-collapseOne" aria-expanded="false" aria-controls="panelsRegistroCivil-collapseOne">
                                Registro Civil
                            </button>
                        </h2>
                        <div id="panelsRegistroCivil-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsRegistroCivil-headingOne" data-bs-parent="#accordionSubconjuntosIntroduccion">
                            @* Apunta al nuevo padre *@
                            <div class="accordion-body">
                                <form id="formPreciosRegistroCivil" class="form-box">
                                    <input type="hidden" id="tarifarioIdRegistroCivil" value="@Model.IdTarifaria" />
                                    @Html.AntiForgeryToken()

                                    @if (Model.ListaPreciosTarifaria != null && Model.ListaPreciosTarifaria.Any())
                                    {
                                        <div class="card shadow-sm">
                                            <div class="card-body p-0">
                                                <table class="table table-hover mb-0">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th>Concepto</th>
                                                            <th>Precio</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @{
                                                            //concepto Registro civil
                                                            var conceptosRegistroCivil = Model.ListaPreciosTarifaria
                                                            .Where(p => p.ConceptoTarifaria.TipoConceptoId == 5 && p.ConceptoTarifaria.Visibilidad == true)
                                                            .OrderBy(p => p.ConceptoTarifaria.Nombre)
                                                            .ToList();
                                                        }

                                                        @foreach (var precio in conceptosRegistroCivil)
                                                        {
                                                            <tr>
                                                                <td>@precio.ConceptoTarifaria.Nombre.ToUpper()</td>
                                                                <td>
                                                                    <div class="input-group">
                                                                        <span class="input-group-text">$</span>
                                                                        <input type="number"
                                                                        class="form-control precio-input"
                                                                        data-precio-id="@precio.Id"
                                                                        data-concepto-id="@precio.ConceptoTarifariaId"
                                                                        value="@precio.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                                                        step="0.01"
                                                                        min="0"
                                                                        placeholder="0.00" />
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }

                                                        @if (!conceptosRegistroCivil.Any())
                                                        {
                                                            <tr>
                                                                <td colspan="2" class="text-center text-muted py-4">
                                                                    <i class="fas fa-info-circle"></i>
                                                                    No hay conceptos de registro civil configurados para esta tarifaria.
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>

                                            @if (conceptosRegistroCivil.Any())
                                            {
                                                <div class="card-footer">
                                                    <div class="d-flex justify-content-end">
                                                        <button type="button" class="btn btn-success btn-guardar-precios" data-form-id="formPreciosRegistroCivil">
                                                            <i class="fas fa-save"></i> Guardar Cambios
                                                        </button>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info" role="alert">
                                            <i class="fas fa-info-circle"></i>
                                            No hay precios configurados para esta tarifaria.
                                        </div>
                                    }
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="panelsDerechoOficina-headingOne">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsDerechoOficina-collapseOne" aria-expanded="false" aria-controls="panelsDerechoOficina-collapseOne">
                                Derecho de Oficina
                            </button>
                        </h2>
                        <div id="panelsDerechoOficina-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsDerechoOficina-headingOne" data-bs-parent="#accordionSubconjuntosIntroduccion">
                            @* Apunta al nuevo padre *@
                            <div class="accordion-body">
                                <form id="formPreciosDerechoOficina" class="form-box">
                                    <input type="hidden" id="tarifarioIdDerechoOficina" value="@Model.IdTarifaria" />
                                    @Html.AntiForgeryToken()

                                    @if (Model.ListaPreciosTarifaria != null && Model.ListaPreciosTarifaria.Any())
                                    {
                                        <div class="card shadow-sm">
                                            <div class="card-body p-0">
                                                <table class="table table-hover mb-0">
                                                    <thead class="table-light">
                                                        <tr>
                                                            <th>Concepto</th>
                                                            <th>Precio</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @{
                                                            //concepto Derecho de oficina
                                                            var conceptosDerechoOficina = Model.ListaPreciosTarifaria
                                                            .Where(p => p.ConceptoTarifaria.TipoConceptoId == 6 && p.ConceptoTarifaria.Visibilidad == true)
                                                            .OrderBy(p => p.ConceptoTarifaria.Nombre)
                                                            .ToList();
                                                        }

                                                        @foreach (var precio in conceptosDerechoOficina)
                                                        {
                                                            <tr>
                                                                <td>@precio.ConceptoTarifaria.Nombre.ToUpper()</td>
                                                                <td>
                                                                    <div class="input-group">
                                                                        <span class="input-group-text">$</span>
                                                                        <input type="number"
                                                                        class="form-control precio-input"
                                                                        data-precio-id="@precio.Id"
                                                                        data-concepto-id="@precio.ConceptoTarifariaId"
                                                                        value="@precio.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                                                        step="0.01"
                                                                        min="0"
                                                                        placeholder="0.00" />
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }

                                                        @if (!conceptosDerechoOficina.Any())
                                                        {
                                                            <tr>
                                                                <td colspan="2" class="text-center text-muted py-4">
                                                                    <i class="fas fa-info-circle"></i>
                                                                    No hay conceptos de derecho de oficina configurados para esta tarifaria.
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>

                                            @if (conceptosDerechoOficina.Any())
                                            {
                                                <div class="card-footer">
                                                    <div class="d-flex justify-content-end">
                                                        <button type="button" class="btn btn-success btn-guardar-precios" data-form-id="formPreciosDerechoOficina">
                                                            <i class="fas fa-save"></i> Guardar Cambios
                                                        </button>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info" role="alert">
                                            <i class="fas fa-info-circle"></i>
                                            No hay precios configurados para esta tarifaria.
                                        </div>
                                    }
                                </form>
                            </div>
                        </div>
                    </div>

                </div> @* Cierre del nuevo acordeón para los subconjuntos *@
            </div>
        </div>
    </div>
</div>

<div id="mensajeAdvertenciaDiferentesFilas"></div>
<!-- Formulario precios nichos -->
<div class="accordion" id="accordionNichos">
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsNichos-headingOne">
            <button class="accordion-button nueva-seccion" type="button" data-bs-toggle="collapse" data-bs-target="#panelsNichos-collapseOne" aria-expanded="false" aria-controls="panelsNichos-collapseOne">
                <span>Secciones - Nichos</span>
            </button>
        </h2>
        <div>
            <div id="panelsNichos-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsNichos-headingOne" data-bs-parent="#accordionNichos">
                <div class="accordion-body">
                    <!-- Contenedor de sub-acordeones para cada sección -->
                    <div class="accordion" id="accordionSubconjuntosNichos">
                        @{
                            // Filtrar secciones que son de tipo nicho (TipoParcela = 1)
                            var seccionesNichos = Model.ListaPreciosTarifaria
                            .Where(p => p.Seccion != null && p.Seccion.TipoParcela == 1)
                            .GroupBy(p => p.Seccion)
                            .Select(g => new
                            {
                                Seccion = g.Key,
                                Precios = g.ToList()
                            })
                            .OrderBy(s => s.Seccion.Nombre)
                            .ToList();
                        }

                        @foreach (var seccionGroup in seccionesNichos)
                        {
                            var seccionId = seccionGroup.Seccion.Id;
                            var filasSeccion = seccionGroup.Seccion.Filas;
                            var nombreSeccion = seccionGroup.Seccion.Nombre;

                            <div class="d-flex align-items-stretch mb-2">
                                <div class="d-flex align-items-center me-3"> <!--Checkbox-->
                                    <input type="checkbox"
                                           class="form-check-input"
                                           id="checkSeccion@(seccionId)"
                                           name="seccionesSeleccionadas"
                                           data-id-seccion="@seccionId"
                                           data-filas-seccion="@filasSeccion"/>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="panelsSeccion@(seccionId)-headingOne">
                                            <button class="accordion-button collapsed"
                                                    type="button"
                                                    data-bs-toggle="collapse"
                                                    data-bs-target="#panelsSeccion@(seccionId)-collapseOne"
                                                    aria-expanded="false"
                                                    aria-controls="panelsSeccion@(seccionId)-collapseOne">
                                                @nombreSeccion.ToUpper() (@filasSeccion filas)
                                            </button>
                                        </h2>
                                        <div id="panelsSeccion@(seccionId)-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsSeccion@(seccionId)-headingOne" data-bs-parent="#accordionSubconjuntosNichos">
                                            <div class="accordion-body">
                                                <form id="formPreciosSeccion@(seccionId)" class="form-box">
                                                    <input type="hidden" id="tarifarioIdSeccion@(seccionId)" value="@Model.IdTarifaria" />
                                                    @Html.AntiForgeryToken()

                                                    @{
                                                        // Obtener los precios de esta sección organizados por fila y años
                                                        var preciosSeccion = seccionGroup.Precios
                                                        .Where(p => p.AniosConcesionNavigation != null && p.AniosConcesionNavigation.Anios != 1) // Excluir 1 año usando la navegación
                                                        .ToList();

                                                        // Obtener las filas únicas de esta sección, o definir filas por defecto
                                                        var filasExistentes = preciosSeccion
                                                        .Where(p => p.NroFila.HasValue)
                                                        .Select(p => p.NroFila.Value)
                                                        .Distinct()
                                                        .ToList();

                                                        // Si no hay filas definidas, usar un rango por defecto
                                                        var filasSeccion = filasExistentes.Any() ?
                                                        filasExistentes.OrderByDescending(f => f).ToList() :
                                                        new List<int> { 4, 3, 2, 1 }; // Filas por defecto si no hay datos

                                                        // Años de concesión disponibles (sin el 1)
                                                        var aniosDisponibles = new List<int> { 25, 15, 10, 5 };
                                                    }

                                                    @if (filasSeccion.Any())
                                                    {
                                                        <div class="card shadow-sm">
                                                            <div class="card-body p-0">
                                                                <div class="table-responsive">
                                                                    <table class="table table-hover mb-0">
                                                                        <thead class="table-light">
                                                                            <tr>
                                                                                <th class="text-center" style="background-color: #2c3e50; color: white; vertical-align: middle; width: 120px;">
                                                                                    @nombreSeccion.ToUpper()
                                                                                </th>
                                                                                @foreach (var anio in aniosDisponibles)
                                                                                {
                                                                                    <th class="text-center" style="background-color: #f8f9fa; font-weight: bold; width: 120px;">
                                                                                        @anio años
                                                                                    </th>
                                                                                }
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            @foreach (var nroFila in filasSeccion)
                                                                            {
                                                                                <tr>
                                                                                    <td class="text-center fw-bold" style="background-color: #ecf0f1; vertical-align: middle;">
                                                                                        Fila @nroFila
                                                                                    </td>
                                                                                    @foreach (var anio in aniosDisponibles)
                                                                                    {
                                                                                      
                                                                                        var precioFila = preciosSeccion
                                                                                        .FirstOrDefault(p => p.NroFila == nroFila &&
                                                                                        p.AniosConcesionNavigation != null &&
                                                                                        p.AniosConcesionNavigation.Anios == anio);

                                                                                        <td class="text-center" style="padding: 8px;">
                                                                                            <div class="input-group input-group-sm">
                                                                                                <span class="input-group-text">$</span>
                                                                                                <input type="number"
                                                                                                       class="form-control precio-input text-center"
                                                                                                       data-precio-id="@(precioFila?.Id ?? 0)"
                                                                                                       data-concepto-id="@(precioFila?.ConceptoTarifariaId ?? 0)"
                                                                                                       data-seccion-id="@seccionId"
                                                                                                       data-nro-fila="@nroFila"
                                                                                                       data-anios-concesion="@anio"
                                                                                                       value="@(precioFila?.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture))"
                                                                                                       step="0.01"
                                                                                                       min="0"
                                                                                                       placeholder="0.00"
                                                                                                       style="font-size: 0.875rem;" />
                                                                                            </div>
                                                                                        </td>
                                                                                    }
                                                                                </tr>
                                                                            }
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </div>

                                                            <div class="card-footer">
                                                                <div class="d-flex justify-content-end">
                                                                    <button type="button" class="btn btn-success btn-guardar-precios" data-form-id="formPreciosSeccion@(seccionId)">
                                                                        <i class="fas fa-save"></i> Guardar Cambios
                                                                    </button>
                                                                </div>
                                                            </div>
                                                            
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-info" role="alert">
                                                            <i class="fas fa-info-circle"></i>
                                                            No hay precios configurados para esta sección.
                                                        </div>
                                                    }
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!seccionesNichos.Any())
                        {
                            <div class="alert alert-info" role="alert">
                                <i class="fas fa-info-circle"></i>
                                No hay secciones de nichos configuradas para esta tarifaria.
                            </div>
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-end pt-3 pe-3 pb-2">
                    <button type="button" class="btn btn-success" id="btnCombinarPrecios">
                        <i class="fas fa-save"></i> Combinar precios
                    </button>
                </div>
            </div>
           
        </div>
       
    </div>
   
</div>

<!-- Formulario precios Fosa-->
<div class="accordion" id="accordionFosa">
    @* ID único para el acordeón principal *@
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsFosa-headingOne">
            <button class="accordion-button nueva-seccion" type="button" data-bs-toggle="collapse" data-bs-target="#panelsFosa-collapseOne" aria-expanded="false" aria-controls="panelsFosa-collapseOne">
                Secciones - Fosas
            </button>
        </h2>
        <div id="panelsFosa-collapseOne" class="accordion-collapse collapse" aria-labelledby="panelsFosa-headingOne" data-bs-parent="#accordionFosa">
            <div class="accordion-body">
                <form id="formPreciosFosa" class="form-box">
                    <input type="hidden" id="tarifarioIdFosa" value="@Model.IdTarifaria" />
                    @Html.AntiForgeryToken()

                    @{
                        // Obtener todas las secciones de fosas para verificar que existan
                        var seccionesFosa = Model.ListaPreciosTarifaria
                        .Where(p => p.Seccion != null && p.Seccion.TipoParcela == 2)
                        .Select(p => p.Seccion)
                        .Distinct()
                        .OrderBy(s => s.Nombre)
                        .ToList();

                        // Obtener precios ejemplo para mostrar (tomamos el primer precio de cada tipo)
                        var precio15Ejemplo = Model.ListaPreciosTarifaria
                        .FirstOrDefault(p => p.AniosConcesion == 4 && p.Seccion != null && p.Seccion.TipoParcela == 2);

                        var precio25Ejemplo = Model.ListaPreciosTarifaria
                        .FirstOrDefault(p => p.AniosConcesion == 5 && p.Seccion != null && p.Seccion.TipoParcela == 2);
                    }

                    @if (seccionesFosa != null && seccionesFosa.Any())
                    {
                        <!-- Inputs ocultos para TODOS los precios de fosas (los usará el JavaScript) -->
                        @foreach (var precio in Model.ListaPreciosTarifaria.Where(p => p.Seccion?.TipoParcela == 2))
                        {
                            <input type="hidden"
                                   class="precio-input"
                                   data-precio-id="@precio.Id"
                                   data-concepto-id="@precio.ConceptoTarifariaId"
                                   data-anios-concesion="@precio.AniosConcesion"
                                   value="@(precio.AniosConcesion == 4 ? precio15Ejemplo?.Precio ?? 0 :
                           precio.AniosConcesion == 5 ? precio25Ejemplo?.Precio ?? 0 :
                           0)" />
                        }
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title mb-4">Precios para todas las secciones de Fosas</h5>
                                <p class="text-muted mb-4">Los precios se aplicarán a todas las secciones de fosas (@seccionesFosa.Count secciones)</p>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label fw-bold">Precio 15 años de concesión</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number"
                                                       id="precio15Fosa"
                                                       class="form-control precio-input"
                                                       data-anios-concesion="4"
                                                       value="@(precio15Ejemplo?.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture))"
                                                       data-concepto-id="@precio15Ejemplo.ConceptoTarifariaId"
                                                       step="0.01"
                                                       min="0"
                                                       placeholder="0.00" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label fw-bold">Precio 25 años de concesión</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number"
                                                       id="precio25Fosa"
                                                       class="form-control precio-input"
                                                       data-anios-concesion="5"
                                                       value="@(precio25Ejemplo?.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture))"
                                                       data-concepto-id="@precio15Ejemplo.ConceptoTarifariaId"
                                                       step="0.01"
                                                       min="0"
                                                       placeholder="0.00" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="alert alert-info" role="alert">
                                    <i class="fas fa-info-circle"></i>
                                    <strong>Secciones que se actualizarán:</strong>
                                    @string.Join(", ", seccionesFosa.Select(s => s.Nombre.ToUpper()))
                                </div>
                            </div>

                            <div class="card-footer">
                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-success btn-guardar-precios" data-form-id="formPreciosFosa">
                                        <i class="fas fa-save"></i> Guardar Precios para todas las Secciones
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info" role="alert">
                            <i class="fas fa-info-circle"></i>
                            No hay secciones de fosas configuradas para esta tarifaria.
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Estilos adicionales para la tabla de nichos -->
<style>
    .table td, .table th {
        border-color: #dee2e6;
    }
    
    .table thead th {
        border-bottom: 2px solid #dee2e6;
    }
    
    .input-group-sm .form-control {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
    
    .input-group-sm .input-group-text {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.075);
    }
</style>





<!-- Modal para combinar precios -->
<div class="modal fade" id="modalCombinarPrecios" tabindex="-1" aria-labelledby="modalCombinarPreciosLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCombinarPreciosLabel">Combinar precios de secciones seleccionadas</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <div id="contenedorTablaCombinarPrecios">
                    <!-- Aquí se inyectará la tabla dinámica -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-success" id="btnGuardarPreciosCombinados">
                    <i class="fas fa-save"></i> Guardar precios
                </button>
            </div>
        </div>
    </div>
</div>






@section Scripts {
    <script>
        // Ejecutar al cargar para validar estado inicial del botón
        actualizarEstadoBotonCombinar();

         //funcion para combinar los precios
            document.addEventListener('DOMContentLoaded', function() {
            const btnCombinar = document.getElementById('btnCombinarPrecios');

            if (btnCombinar) {
                btnCombinar.addEventListener('click', function(event) {
                    event.stopImmediatePropagation(); // Detiene TODOS los eventos
                    event.preventDefault();
                    console.log('Botón Combinar precios presionado');

                    var listaSeccionesSeleccionadas = obtenerSeccionesSeleccionadas();
                    console.log(listaSeccionesSeleccionadas);

                    const mensajeAdvertenciaDiferentesFilas = document.getElementById('mensajeAdvertenciaDiferentesFilas');


                    if(todasLasFilasSonIguales(listaSeccionesSeleccionadas)){
                        console.log("todas son iguales"); //tengo que abrir un modal con la tabla de precios, el boton guardar y cancelar
                        mensajeAdvertenciaDiferentesFilas.innerHTML = '';

                        // Generar la tabla y mostrar el modal
                        generarTablaModalPrecios(listaSeccionesSeleccionadas);
                        var modal = new bootstrap.Modal(document.getElementById('modalCombinarPrecios'));
                        modal.show();
                    }else{
                        // mostrar el mesaje con la vista
                        mensajeAdvertenciaDiferentesFilas.innerHTML = '';
                        const alertDiv = document.createElement('div');
                        alertDiv.className = `alert alert-warning alert-dismissible fade show alerta-contenedor`;
                        alertDiv.setAttribute('role', 'alert');
                        alertDiv.innerHTML = `
                            Las secciones deben tener la misma cantidad de filas para combinar precios
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        `;

                        mensajeAdvertenciaDiferentesFilas.appendChild(alertDiv);
                    }

                });
            }
        });

        //verifica que todas las filas sean iguales
        function todasLasFilasSonIguales(listaSecciones) {
            if (listaSecciones.length === 0) return false;

            const filasReferencia = listaSecciones[0].filas;

            return listaSecciones.every(seccion => seccion.filas === filasReferencia);
        }


        // Función para obtener las secciones seleccionadas
        function obtenerSeccionesSeleccionadas() {
            var seccionesSeleccionadas = document.querySelectorAll('input[name="seccionesSeleccionadas"]:checked');
            var datosSeccion = Array.from(seccionesSeleccionadas).map(cb => {
                return {
                    id: parseInt(cb.dataset.idSeccion),
                    filas: parseInt(cb.dataset.filasSeccion)
                }
            });
            //console.log('Secciones seleccionadas:', datosSeccion);
            return datosSeccion;
        }

        // Habilita o deshabilita el botón según la cantidad de secciones seleccionadas
        function actualizarEstadoBotonCombinar() {
            const btnCombinar = document.getElementById('btnCombinarPrecios');
            const lista = obtenerSeccionesSeleccionadas();

            if (btnCombinar) {
                btnCombinar.disabled = (lista.length < 2);
            }
        }

        // Agregar el evento a todos los checkboxes
        document.querySelectorAll('input[name="seccionesSeleccionadas"]').forEach(function(checkbox) {
            checkbox.addEventListener('change', actualizarEstadoBotonCombinar)
        });



        function generarTablaModalPrecios(seccionesSeleccionadas) {
            // Todas las secciones tienen la misma cantidad de filas
            let filas = seccionesSeleccionadas[0].filas;
            let anios = [25, 15, 10, 5];
            let inputOriginal = document.querySelector(`.precio-input[data-seccion-id="${seccionesSeleccionadas[0].id}"]`);
            let conceptoTarifariaId = inputOriginal ? inputOriginal.dataset.conceptoId : 0;

            // Construye la tabla
            let html = `<table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Fila</th>`;
            anios.forEach(anio => html += `<th>${anio} años</th>`);
            html += `</tr></thead><tbody>`;

            for(let fila = filas; fila >= 1; fila--) {
                html += `<tr>
                    <td>Fila ${fila}</td>`;
                anios.forEach(anio => {
                    html += `<td>
                        <div class="input-group input-group-sm">
                            <span class="input-group-text">$</span>
                            <input type="number"
                                class="form-control precio-input-modal text-center"
                                data-nro-fila="${fila}"
                                data-anios-concesion="${anio}"
                                data-concepto-id="${conceptoTarifariaId}"
                                value="0"
                                step="0.01"
                                min="0"
                                placeholder="0.00"
                                style="font-size: 0.875rem;" />
                        </div>
                    </td>`;
                });
                html += `</tr>`;
            }

            html += `</tbody></table>`;

            document.getElementById('contenedorTablaCombinarPrecios').innerHTML = html;
        }

        //guardar los precios seleccionados
        document.getElementById('btnGuardarPreciosCombinados').addEventListener('click', function() {
            let precios = [];
            let todosValidos = true;
            let seccionesSeleccionadas = obtenerSeccionesSeleccionadas();

            document.querySelectorAll('.precio-input-modal').forEach(input => {
                let precio = parseFloat(input.value) || 0;
                // if (precio < 0) {
                //     todosValidos = false;
                //     input.classList.add('is-invalid');
                // } else {
                //     input.classList.remove('is-invalid');
                // }
                let nroFila = parseInt(input.dataset.nroFila);
                let aniosConcesion = parseInt(input.dataset.aniosConcesion);
                let conceptoTarifariaId = parseInt(input.dataset.conceptoId || 0);
                // Para cada sección seleccionada, agrega un precio
                seccionesSeleccionadas.forEach(seccion => {

                    let inputOriginal = document.querySelector(`.precio-input[data-seccion-id="${seccion.id}"][data-nro-fila="${nroFila}"][data-anios-concesion="${aniosConcesion}"]`);
                    let idPrecio = inputOriginal ? parseInt(inputOriginal.dataset.precioId) : 0;

                    precios.push({
                        Id: idPrecio,
                        SeccionId: seccion.id,
                        NroFila: nroFila,
                        AniosConcesion: aniosConcesion,
                        Precio: precio,
                        ConceptoTarifariaId: conceptoTarifariaId
                    });
                    console.log(precios);
                });
            });

            // if (!todosValidos) {
            //     mostrarMensaje('Por favor, ingrese valores válidos para todos los precios.', 'danger');
            //     return;
            // }

            fetch('@Url.Action("ActualizarPreciosTarifaria", "Tarifaria")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify(precios)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    mostrarMensaje(result.message, 'success');

                    // Actualizar los inputs originales con los nuevos valores
                    actualizarInputsOriginales(precios);

                    var modal = bootstrap.Modal.getInstance(document.getElementById('modalCombinarPrecios'));
                    modal.hide();

                 // Opcional: Limpiar las selecciones de checkboxes
                 document.querySelectorAll('input[name="seccionesSeleccionadas"]:checked').forEach(checkbox => {
                     checkbox.checked = false;
                 });

                 // Actualizar estado del botón
                 actualizarEstadoBotonCombinar();

                } else {
                    mostrarMensaje(result.message, 'danger');
                }
                console.log(result);
            })
            .catch(error => {
                mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
                console.error('Error:', error);
            });
        });

        
        // Actualizar los inputs originales en la página
        function actualizarInputsOriginales(preciosActualizados) {
            preciosActualizados.forEach(precio => {
                // Buscar el input original correspondiente
                let inputOriginal = document.querySelector(
                    `.precio-input[data-seccion-id="${precio.SeccionId}"][data-nro-fila="${precio.NroFila}"][data-anios-concesion="${precio.AniosConcesion}"]`
                );

                if (inputOriginal) {
                    // Actualizar el valor del input
                    inputOriginal.value = precio.Precio.toFixed(2);

                    // Opcional: Agregar un efecto visual para indicar que se actualizó
                    inputOriginal.classList.add('border-success');
                    setTimeout(() => {
                        inputOriginal.classList.remove('border-success');
                    }, 2000);
                }
            });
        }




    </script>



    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Selecciona todos los botones con la clase 'btn-guardar-precios'
            const btnsGuardar = document.querySelectorAll('.btn-guardar-precios');

            // Itera sobre cada botón y agrega un event listener
            btnsGuardar.forEach(btn => {
                btn.addEventListener('click', function(event) {
                    // 'this' se refiere al botón clickeado
                    const formId = this.dataset.formId; // Obtiene el ID del formulario desde el atributo data-form-id
                    const formElement = document.getElementById(formId); // Obtiene el elemento del formulario

                    if (formElement) {
                        // Llamamos a actualizarPrecios pasando el formulario y el botón clickeado
                        // para que pueda extraer los datos relevantes de ESE formulario
                        actualizarPrecios(formElement, this);
                    } else {
                        console.error('No se encontró el formulario con ID:', formId);
                    }
                });
            });
        });

        // La función ahora recibe el formulario específico y el botón que la llamó
        async function actualizarPrecios(formElement, clickedButton) {
            const precios = [];
            let todosValidos = true;


            // Recopilar solo los precios de los inputs dentro de ESTE formulario
            const inputsPrecios = formElement.querySelectorAll('.precio-input');
            inputsPrecios.forEach(input => {
                const precio = parseFloat(input.value) || 0;

                if (precio < 0) {
                    todosValidos = false;
                    input.classList.add('is-invalid');
                } else {
                    input.classList.remove('is-invalid');
                }

                precios.push({
                    Id: parseInt(input.dataset.precioId),
                    ConceptoTarifariaId: parseInt(input.dataset.conceptoId),
                    Precio: precio
                });
            });

            if (!todosValidos) {
                mostrarMensaje('Por favor, ingrese valores válidos para todos los precios.', 'danger');
                return;
            }


            const requestVerificationToken = formElement.querySelector('input[name="__RequestVerificationToken"]')?.value || '';

            // Mostrar loading en el botón específico que fue clickeado
            clickedButton.disabled = true;
            clickedButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Guardando...';

            try {
                // Realizar la llamada con fetch
                const response = await fetch('@Url.Action("ActualizarPreciosTarifaria", "Tarifaria")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': requestVerificationToken
                    },
                    // ¡Importante! Aquí enviamos directamente el array de precios,
                    // sin envolverlo en un objeto con 'tarifarioId'.
                    body: JSON.stringify(precios)
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();

                if (result.success) {
                    mostrarMensaje(result.message, 'success');
                } else {
                    mostrarMensaje(result.message, 'danger');
                }

            } catch (error) {
                mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
                console.error('Error:', error);
            } finally {
                // Restaurar el botón clickeado
                clickedButton.disabled = false;
                clickedButton.innerHTML = '<i class="fas fa-save"></i> Guardar Cambios';
            }
        }

        function mostrarMensaje(mensaje, tipo) {
            // Limpiar mensajes anteriores
            const messagesContainer = document.getElementById('ajax-messages');
            messagesContainer.innerHTML = '';

            // Crear el mensaje
            const alertClass = tipo === 'success' ? 'alert-success' : 'alert-danger';
            const iconClass = tipo === 'success' ? 'fas fa-check-circle' : 'fas fa-exclamation-circle';

            const alertDiv = document.createElement('div');
            alertDiv.className = `alert ${alertClass} alert-dismissible fade show alerta-contenedor`;
            alertDiv.setAttribute('role', 'alert');
            alertDiv.innerHTML = `
                <i class="${iconClass}"></i> ${mensaje}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;

            messagesContainer.appendChild(alertDiv);

            // Auto-ocultar después de 5 segundos
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }
    </script>



    <script>
                document.addEventListener('DOMContentLoaded', function () {
            const btnGuardarFosas = document.querySelector('.btn-guardar-precios[data-form-id="formPreciosFosa"]');

            if (btnGuardarFosas) {
                btnGuardarFosas.addEventListener('click', async function (event) {
                    event.preventDefault();

                    const formElement = document.getElementById('formPreciosFosa');
                    const tarifarioId = parseInt(formElement.querySelector('#tarifarioIdFosa').value);

                    // Obtener los precios ingresados
                    const precio15Input = formElement.querySelector('#precio15Fosa');
                    const precio25Input = formElement.querySelector('#precio25Fosa');

                    const precio15 = parseFloat(precio15Input.value) || 0;
                    const precio25 = parseFloat(precio25Input.value) || 0;

                    // Validar los precios
                    let todosValidos = true;
                    if (precio15 < 0) {
                        todosValidos = false;
                        precio15Input.classList.add('is-invalid');
                    } else {
                        precio15Input.classList.remove('is-invalid');
                    }

                    if (precio25 < 0) {
                        todosValidos = false;
                        precio25Input.classList.add('is-invalid');
                    } else {
                        precio25Input.classList.remove('is-invalid');
                    }

                    if (!todosValidos) {
                        mostrarMensaje('Por favor, ingrese valores válidos para todos los precios.', 'danger');
                        return;
                    }
                    const precios = [];


                    // Recopilar solo los precios de los inputs dentro de ESTE formulario
                    const inputsPrecios = formElement.querySelectorAll('input[type="hidden"].precio-input');

                    inputsPrecios.forEach(input => {
                        const anios = input.dataset.aniosConcesion;
                        let precio = 0;

                        // Asignar el precio correspondiente para 15 o 25, el resto queda en 0
                        if (anios === "4") {
                            precio = precio15;
                        } else if (anios === "5") {
                            precio = precio25;
                        }

                        precios.push({
                            Id: parseInt(input.dataset.precioId),
                            ConceptoTarifariaId: parseInt(input.dataset.conceptoId),
                            Precio: precio
                        });
                        console.log(precios);
                    });

                    const requestVerificationToken = formElement.querySelector('input[name="__RequestVerificationToken"]')?.value || '';

                    // Mostrar loading en el botón específico que fue clickeado
                    btnGuardarFosas.disabled = true;
                    btnGuardarFosas.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Guardando...';

                    try {
                        // Realizar la llamada con fetch
                        const response = await fetch('@Url.Action("ActualizarPreciosTarifaria", "Tarifaria")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': requestVerificationToken
                            },
                            body: JSON.stringify(precios)
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        const result = await response.json();

                        if (result.success) {
                            mostrarMensaje(result.message, 'success');
                        } else {
                            mostrarMensaje(result.message, 'danger');
                        }
                    } catch (error) {
                        mostrarMensaje('Error de conexión. Por favor, intente nuevamente.', 'danger');
                        console.error('Error:', error);
                    } finally {
                        // Restaurar el botón clickeado
                        btnGuardarFosas.disabled = false;
                        btnGuardarFosas.innerHTML = '<i class="fas fa-save"></i> Guardar Precios para todas las Secciones';
                    }
                });
            }
        });

    </script>
}
